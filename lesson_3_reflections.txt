When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository would make collaboration easier for a larger project
    or if you use multiple computers to work on a project. It would make it
    easier to always have access to the most current version of your project.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    If someone else was working on your code via the remote,
    the new code may have changes that you don't yet want, or they
    may just be too confusing to figure out without in-person
    discussion of the code. This would leave you spending a lot more
    time figuring out the changes that someone else made, instead of
    being able to work on things on your own.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork makes a copy of repository on Github, nothing happens on
    your local computer. Cloning is a more general term for copying
    a repository that can happen locally or from a remote (like on
    Github) to a local computer. A branch is a label for a 
    commit(or multiple) within a repository, can be local or in a 
    remote. A fork would be more useful for a repository that you
    want to make changes to, but don't have permission to change the
    original. Cloning would allow you to work on a repository offline
    (yours or someone else's). And branching is a good way to keep
    your commits organized.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Having a local copy of the last known state of the remote makes it
    easy to tell how many changes you've made locally that you haven't
    yet pushed. If you're collaborating with someone else, it makes it
    easy to see the most recent version of a project while working
    offline, even if you weren't the last one to make changes.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Collaborating without Git or Github would require sending versions
    to one another manually or setting up a remote repository on your
    own server, which would probably be more difficult. It would also
    be difficult to tell what changes were made between versions 
    without a commit history. It would, however, be easier to make
    saves quickly because you wouldn't have to input a bunch of
    commands through a command line every time you want to make a
    change. A GUI full of your files would probably be easier to 
    read than a commit history too. Trying to merge together 
    changes you made and changes someone else made would be a 
    nightmare though, since everything would have to be merged 
    manually.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
